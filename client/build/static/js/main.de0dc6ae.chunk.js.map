{"version":3,"sources":["components/Header.js","components/Loader.js","components/Button.js","components/Input.js","components/Error.js","enums/ActionEnum.js","store/reducer.js","context/context.js","components/AllTodo/Todos.js","components/AllTodo/Todo.js","components/AllTodo/AddTodo.js","App.js","index.js"],"names":["Header","className","Loading","styled","div","Loader","Button","type","Input","useFormContext","register","dirty","formState","validationSchema","errors","required","maxLength","minLength","useMemo","name","ref","placeholder","Error","title","errorMessage","ActionEnum","initialState","todos","isLoading","reducer","state","action","payload","map","todo","_id","complete","filter","Context","createContext","Provider","children","useReducer","dispatch","useEffect","a","async","axios","get","result","data","fetchTodos","value","Todos","useContext","isError","index","key","id","H3","h3","props","Todo","onClick","delete","removedTodo","remove","console","info","error","onChange","toogle","ErrorWrapper","AddTodo","methods","useForm","mode","onSubmit","handleSubmit","newTodo","post","addedTodo","AppContainer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de0dc6ae.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Header = () => (\n  <div className='card bg-dark text-center text-light rounded-0 mt-5'>\n    <h1 className='display-6'>\n      <i className='fas fa-clipboard-list mr3'></i>\n      <span className='text-light ml-3'>MERN</span> Todo List\n    </h1>\n  </div>\n);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Loading = styled.div`\n  font-size: 2rem;\n  color: #a9a9a9;\n`;\n\nexport const Loader = () => <Loading>Loading...</Loading>;\n","import React from 'react';\n\nexport const Button = () => (\n  <button type='submit' className='form-control rounded-0 btn-secondary'>\n    Add Todo\n  </button>\n);\n","import React, { useMemo } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\n/* eslint-disable */\nexport const Input = () => {\n  const {\n    register,\n    formState: { dirty },\n    errors\n  } = useFormContext();\n\n  const validationSchema = {\n    required: true,\n    maxLength: 100,\n    minLength: 4\n  };\n\n  return useMemo(\n    () => (\n      <input\n        name='title'\n        ref={register(validationSchema)}\n        type='text'\n        className='form-control rounded-0'\n        placeholder='Add your Todo'\n      />\n    ),\n    [dirty]\n  );\n};\n","export const Error = ({ errors: { title: { type = '' } = {} } = {} }) => {\n  let errorMessage = '';\n  if (type === 'required') {\n    errorMessage = 'Title is required';\n  } else if (type === 'maxLength') {\n    errorMessage = 'Max Length 100';\n  } else if (type === 'minLength') {\n    errorMessage = 'Min Length 4';\n  }\n\n  return errorMessage;\n};\n","export const ActionEnum = {\n  FETCH_INIT: 'FETCH_INIT',\n  FETCH_SUCCESS: 'FETCH_SUCCESS',\n  FETCH_FAILURE: 'FETCH_FAILURE',\n  TOGGLE: 'TOGGLE',\n  REMOVE: 'REMOVE',\n  ADD: 'ADD'\n};\n","import { ActionEnum } from 'enums/ActionEnum';\n\nconst initialState = {\n  todos: [],\n  isLoading: false\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionEnum.FETCH_INIT:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case ActionEnum.FETCH_SUCCESS:\n      return {\n        isLoading: false,\n        todos: action.payload\n      };\n    case ActionEnum.FETCH_FAILURE:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case ActionEnum.TOGGLE:\n      return {\n        todos: state.todos.map(todo => {\n          if (todo._id === action.payload) {\n            todo.complete = !todo.complete;\n          }\n          return todo;\n        })\n      };\n    case ActionEnum.REMOVE:\n      return {\n        todos: state.todos.filter(todo => todo._id !== action.payload)\n      };\n    case ActionEnum.ADD:\n      return {\n        todos: [...state.todos, action.payload]\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useEffect, useReducer } from 'react';\nimport axios from 'axios';\n\nimport { reducer } from 'store';\nimport { ActionEnum } from 'enums/ActionEnum';\n\nconst Context = createContext();\n\nexport const Provider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer);\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      dispatch({ type: ActionEnum.FETCH_INIT });\n      try {\n        const result = await axios.get('/todos');\n        if (result) {\n          dispatch({ type: ActionEnum.FETCH_SUCCESS, payload: result.data });\n        }\n      } catch (error) {\n        dispatch({ type: ActionEnum.FETCH_FAILURE });\n      }\n    };\n    fetchTodos();\n  }, []);\n\n  return <Context.Provider value={{ state, dispatch }}>{children}</Context.Provider>;\n};\n\nexport { Context };\n","import React, { useContext, useMemo } from 'react';\n\nimport { Context } from 'context';\nimport { Todo } from 'components';\n\nexport const Todos = () => {\n  const { state: { todos = [], isLoading, isError } = {} } = useContext(Context);\n  return useMemo(\n    () =>\n      todos.map((todo, index) => (\n        <Todo todo={todo} isLoading={isLoading} isError={isError} key={`${todo.id}${index}`} />\n      )),\n    [todos, isLoading, isError]\n  );\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nimport { Context } from 'context';\nimport { Loader } from 'components';\nimport { ActionEnum } from 'enums/ActionEnum';\n\nconst H3 = styled.h3`\n  text-decoration: ${props => (props.complete ? 'line-through' : 'none')};\n`;\n\nexport const Todo = ({ isLoading, todo: { title, complete, _id: id } = {} }) => {\n  const { dispatch = () => {} } = useContext(Context);\n\n  const toogle = async (id, dispatch) => {\n    dispatch({ type: ActionEnum.TOGGLE, payload: id });\n  };\n\n  const remove = async (id, dispatch) => {\n    try {\n      const removedTodo = (await axios.delete(`/todos/${id}`)) || false;\n      if (removedTodo && removedTodo.data.remove) {\n        dispatch({ type: ActionEnum.REMOVE, payload: id });\n      } else {\n        console.info(`${id} is not removed`);\n      }\n    } catch (error) {\n      console.error('Error', error);\n    }\n  };\n\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <H3 complete={complete} className='text-dark text-center p-1 bg-light'>\n      <i\n        className='far fa-times-circle fa-sm float-left m-1 text-danger'\n        onClick={() => remove(id, dispatch)}\n      />\n      {title}\n      <input type='checkbox' className='m-2 float-right' onChange={() => toogle(id, dispatch)} />\n    </H3>\n  );\n};\n\nTodo.propTypes = {\n  todo: PropTypes.object\n};\n","import React, { useContext } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { useForm, FormContext } from 'react-hook-form';\n\nimport { Context } from 'context';\nimport { Button, Input, Error } from 'components';\nimport { ActionEnum } from 'enums/ActionEnum';\n\nconst ErrorWrapper = styled.div`\n  min-height: 2rem;\n  width: 100%;\n  display: block;\n  color: #ff0909;\n  text-align: left;\n`;\n\nexport const AddTodo = () => {\n  const { dispatch = () => {} } = useContext(Context);\n  const methods = useForm({\n    mode: 'onChange'\n  });\n\n  const onSubmit = async data => {\n    const newTodo = {\n      title: data.title,\n      complete: false\n    };\n\n    try {\n      const addedTodo = await axios.post('/todos', newTodo);\n      await dispatch({ type: ActionEnum.ADD, payload: addedTodo.data });\n    } catch (error) {\n      console.error('error=>', error);\n    }\n  };\n\n  return (\n    <FormContext {...methods}>\n      <form onSubmit={methods.handleSubmit(onSubmit)}>\n        <Input />\n        <Button />\n        <ErrorWrapper>\n          <Error errors={methods.errors} />\n        </ErrorWrapper>\n      </form>\n    </FormContext>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Header, AddTodo, Todos } from 'components';\nimport { Provider } from 'context';\n\nconst AppContainer = styled.div`\n  max-width: 35rem;\n  margin: auto;\n  text-align: center;\n`;\n\nconst App = () => (\n  <Provider>\n    <AppContainer>\n      <Header />\n      <AddTodo />\n      <Todos />\n    </AppContainer>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}